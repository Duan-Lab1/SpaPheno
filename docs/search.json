[{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GNU GENERAL PUBLIC LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU GENERAL PUBLIC LICENSE","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU GENERAL PUBLIC LICENSE","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU GENERAL PUBLIC LICENSE","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU GENERAL PUBLIC LICENSE","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU GENERAL PUBLIC LICENSE","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU GENERAL PUBLIC LICENSE","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU GENERAL PUBLIC LICENSE","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU GENERAL PUBLIC LICENSE","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU GENERAL PUBLIC LICENSE","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU GENERAL PUBLIC LICENSE","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU GENERAL PUBLIC LICENSE","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU GENERAL PUBLIC LICENSE","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU GENERAL PUBLIC LICENSE","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU GENERAL PUBLIC LICENSE","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"SpaPheno R package designed identify, visualize, interpret spatial phenotype associations spatial transcriptomics simulated bulk data. enables users : Construct predictive models cell type compositions phenotypic labels (e.g., disease presence). Map spatial risk distributions across tissues organs using spatially-aware neighborhood features. Assess statistical significance permutation-based tests. Interpret feature contributions using SHAP (SHapley Additive exPlanations) analysis single-cell resolution.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"get started SpaPheno, ensure required dependencies installed. package relies set CRAN Bioconductor packages glmnet, FNN, survival. can install via BiocManager already available. Next, install SpaPheno directly GitHub using devtools. fetch latest development version maintained authors. installed, load core packages used throughout SpaPheno workflow, including ggplot2 visualization tidyverse data handling.","code":"if (!require(\"BiocManager\", quietly = TRUE)) {   install.packages(\"BiocManager\") }  ## Install suggested packages # BiocManager::install(c( #   \"glmnet\", #   \"FNN\", #   \"survival\" # ))  # install.packages(\"devtools\") # devtools::install_github(\"bm2-lab/SpaDo\")  # SpaPheno installation # devtools::install_github(\"DuanLab1/SpaPheno\", dependencies = c(\"Depends\", \"Imports\", \"LinkingTo\"))  library(SpaPheno) library(tidyverse) library(ggplot2) library(reshape2) library(stringr) library(survival)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"data-availability","dir":"Articles","previous_headings":"","what":"Data availability","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"data required test listed following directory SpaPheno Demo Data.","code":"├── BRCAsurvival.RData ├── HCC_stage.RData ├── HCC_survival.RData ├── KIRC_survival.RData ├── Melanoma_ICB.RData ├── Simulation_osmFISH.RData └── Simulation_STARmap.RData"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"simulation-osmfish","dir":"Articles","previous_headings":"","what":"Simulation osmFISH","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"tutorial demonstrates workflow SpaPheno using simulated osmFISH data, including: Loading visualizing spatial cell annotations. Defining simulated phenotypes across spatial regions. Generating pseudo-bulk samples phenotype modeling. Building logistic regression model via automated regularization selection. Performing spatial phenotype risk prediction. Interpreting key contributing cell types using SHAP values. Exploring spatial patterns model residuals biological insight. Together, pipeline allows researchers integrate spatial structure, cell composition, predictive modeling understand local cell-type environments contribute complex phenotypes.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"load-data","dir":"Articles","previous_headings":"Simulation osmFISH","what":"load data","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"rm(list = ls())  load(system.file(\"extdata\", \"Simulation_osmFISH.RData\", package = \"SpaPheno\"))  ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_cellType)) +   geom_point(size = 1) ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point(size = 1)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"choose-simulated-phenotypes","dir":"Articles","previous_headings":"Simulation osmFISH","what":"Choose simulated phenotypes","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"region_all <- names(table(sample_information_region)) phenotype_simu <- region_all[c(3, 4)] sample_information_region_choose <- sample_information_region sample_information_region_choose[!sample_information_region_choose %in% phenotype_simu] <- NA"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"ground-truth-of-simulated-phenotypes","dir":"Articles","previous_headings":"Simulation osmFISH","what":"Ground truth of simulated phenotypes","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"custom_colors <- c(\"red\", \"lightgray\", \"blue\") names(custom_colors) <- c(phenotype_simu[2], \"Background\", phenotype_simu[1]) sample_information_region_choose[!sample_information_region_choose %in% phenotype_simu] <- \"Background\" Ground_truth <- factor(sample_information_region_choose[row.names(test_coordinate)], levels = c(phenotype_simu[1], \"Background\", phenotype_simu[2])) ggplot(test_coordinate, aes(x = X, y = Y, color = Ground_truth)) +   geom_point(size = 1) +   scale_color_manual(values = custom_colors)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"simulating-bulk-data-with-phenotypes","dir":"Articles","previous_headings":"Simulation osmFISH","what":"Simulating bulk data with phenotypes","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"pseudo_bulk_simi <- generate_simulated_bulk_data(   input_data = sample_information_cellType,    region_labels = sample_information_region,    phenotypes = phenotype_simu,    perturbation_percent = 0.1,    num_samples = 50,    mode = \"proportion\")  pseudo_bulk_df1 <- pseudo_bulk_simi[[1]] pseudo_bulk_df2 <- pseudo_bulk_simi[[2]]  bulk_decon <- t(as.matrix(cbind(pseudo_bulk_df1, pseudo_bulk_df2))) bulk_pheno <- rep(c(0, 1), each = 50) names(bulk_pheno) <- c(colnames(pseudo_bulk_df1), colnames(pseudo_bulk_df2)) family <- \"binomial\""},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"obtaining-prediction-results","dir":"Articles","previous_headings":"Simulation osmFISH","what":"Obtaining prediction results","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,    bulk_pheno = bulk_pheno,    family = family,    coord = test_coordinate,    resolution = \"single_cell\",    sample_information_cellType = sample_information_cellType,    n_perm = 1,    p = 0.001)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-analysis","dir":"Articles","previous_headings":"Simulation osmFISH","what":"SHAP analysis","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"pred_result <- PhenoResult$pred_score phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ])  model <- PhenoResult$model X <- as.data.frame(PhenoResult$cell_type_distribution[phenoPlus, ])  ## This step took a very long time # shap_test_plus <- compute_shap_spatial( #   model = model,  #   X_bulk = as.data.frame(bulk_decon),  #   y_bulk = bulk_pheno,  #   X_spatial = X)  head(shap_test_plus) ##           feature           phi      phi.var feature.value    sample ## 1  Astrocyte.Gfap  0.0000000000 0.000000e+00          0.08 cell_5682 ## 2 Astrocyte.Mfge8  0.0000000000 0.000000e+00          0.04 cell_5682 ## 3       C..Plexus -0.0134631352 4.616196e-03          0.02 cell_5682 ## 4     Endothelial  0.0000000000 0.000000e+00          0.06 cell_5682 ## 5   Endothelial.1  0.0002035102 1.812159e-05          0.02 cell_5682 ## 6       Ependymal  0.0000000000 0.000000e+00          0.00 cell_5682"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-summary-plot","dir":"Articles","previous_headings":"Simulation osmFISH","what":"SHAP summary plot","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"SpaPheno_SHAP_summary_plot(shap_test_plus, top_n = 31)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-residual-analysis","dir":"Articles","previous_headings":"Simulation osmFISH","what":"SHAP residual analysis","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"resi_result <- SpaPheno_SHAP_residual_analysis(   shap_df = shap_test_plus,   feature_name = \"Perivascular.Macrophages\",   coordinate_df = test_coordinate, size = 0.8 ) resi_hot <- resi_result$residual_table head(resi_hot[order(abs(resi_hot$phi_resid_z), decreasing = T), ], 5) ##                      feature        phi   phi.var feature.value    sample ## 420 Perivascular.Macrophages  0.3887959 0.2184542          0.06 cell_5612 ## 483 Perivascular.Macrophages -0.2546234 0.1502212          0.00 cell_4530 ## 493 Perivascular.Macrophages -0.2535509 0.1451300          0.00 cell_4650 ## 457 Perivascular.Macrophages  0.5548111 0.2055735          0.12 cell_5593 ## 39  Perivascular.Macrophages  0.3240469 0.1976987          0.04 cell_5790 ##     phi_residual phi_resid_z   resid_group color_group ## 420    0.2360473    2.642347 High residual        High ## 483   -0.2356644   -2.638060  Low residual         Low ## 493   -0.2345918   -2.626054  Low residual         Low ## 457    0.2303550    2.578626 High residual        High ## 39     0.2285343    2.558245 High residual        High SpaPheno_SHAP_waterfall_plot(shap_test_plus, \"cell_5593\", top_n = 10) resi_result$dependence_plot resi_result$spatial_plot"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"load-data-1","dir":"Articles","previous_headings":"Simulation STARmap","what":"load data","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"rm(list = ls())  load(system.file(\"extdata\", \"Simulation_STARmap.RData\", package = \"SpaPheno\"))  ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_cellType)) +   geom_point() ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point()"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"choose-simulated-phenotypes-1","dir":"Articles","previous_headings":"Simulation STARmap","what":"Choose simulated phenotypes","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"region_all <- names(table(sample_information_region)) phenotype_simu <- region_all[c(2, 6)] sample_information_region_choose <- sample_information_region sample_information_region_choose[!sample_information_region_choose %in% phenotype_simu] <- NA"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"ground-truth-of-simulated-phenotypes-1","dir":"Articles","previous_headings":"Simulation STARmap","what":"Ground truth of simulated phenotypes","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"custom_colors <- c(\"red\", \"lightgray\", \"blue\") names(custom_colors) <- c(phenotype_simu[2], \"Background\", phenotype_simu[1]) sample_information_region_choose[!sample_information_region_choose %in% phenotype_simu] <- \"Background\" Ground_truth <- factor(sample_information_region_choose[row.names(test_coordinate)],                         levels = c(phenotype_simu[1], \"Background\", phenotype_simu[2])) ggplot(test_coordinate, aes(x = X, y = Y, color = Ground_truth)) +   geom_point(size = 1) +   scale_color_manual(values = custom_colors)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"obtain-simulated-data-with-phenotypes","dir":"Articles","previous_headings":"Simulation STARmap","what":"Obtain simulated data with phenotypes","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"pseudo_bulk_simi <- generate_simulated_bulk_data(   input_data = sample_information_cellType,    region_labels = sample_information_region,    phenotypes = phenotype_simu,    perturbation_percent = 0.1,    num_samples = 50,   mode = \"proportion\")  pseudo_bulk_df1 <- pseudo_bulk_simi[[1]] pseudo_bulk_df2 <- pseudo_bulk_simi[[2]]  bulk_decon <- as.matrix(cbind(pseudo_bulk_df1, pseudo_bulk_df2)) bulk_decon <- t(apply(bulk_decon, 2, function(x) {   x / sum(x) })) bulk_pheno <- rep(c(0, 1), each = 50) names(bulk_pheno) <- c(colnames(pseudo_bulk_df1), colnames(pseudo_bulk_df2)) family <- \"binomial\""},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"obtain-prediction-results","dir":"Articles","previous_headings":"Simulation STARmap","what":"Obtain prediction results","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,   bulk_pheno = bulk_pheno,    family = family,    coord = test_coordinate,    resolution = \"single_cell\",    sample_information_cellType = sample_information_cellType,    n_perm = 1,    p = 0.001 )"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"load-demo-data","dir":"Articles","previous_headings":"Survival HCC","what":"load demo data","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"rm(list = ls())  load(system.file(\"extdata\", \"HCC_survival.RData\", package = \"SpaPheno\"))  ### TLS label ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point(size = 1.5) +   scale_color_manual(     values = c(       \"TLS\" = \"#007ACC\",          \"nonTLS\" = \"lightgray\"      ),     name = \"Region Type\",      labels = c(\"Non-TLS\", \"TLS\")   )"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"obtain-prediction-results-1","dir":"Articles","previous_headings":"Survival HCC","what":"Obtain prediction results","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,   bulk_pheno = bulk_pheno,   family = \"cox\",   coord = test_coordinate,   resolution = \"spot\",   sample_information_decon = ST_decon,   size = 1.5,   n_perm = 1,   p = 0.001,   r = 4 )"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-analysis-1","dir":"Articles","previous_headings":"Survival HCC","what":"SHAP analysis","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"pred_result <- PhenoResult$pred_score phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ]) phenoMinus <- row.names(pred_result[pred_result$label %in% \"phenotype-\", ])  model <- PhenoResult$model X <- PhenoResult$cell_type_distribution[phenoMinus, ] shap_test <- compute_shap_spatial(model, bulk_decon, bulk_pheno, X) head(shap_test) SpaPheno_SHAP_summary_plot(shap_test, top_n = 10)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-residual-analysis-1","dir":"Articles","previous_headings":"Survival HCC","what":"SHAP residual analysis","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"resi_result <- SpaPheno_SHAP_residual_analysis(   shap_df = shap_test,   feature_name = \"Naive.CD4T\",   coordinate_df = test_coordinate, size = 0.8 ) resi_result$dependence_plot resi_result$spatial_plot"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-waterfall-plot","dir":"Articles","previous_headings":"Survival HCC","what":"SHAP waterfall plot","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"resi_hot <- resi_result$residual_table head(resi_hot[order(abs(resi_hot$phi_resid_z), decreasing = T), ], 10) SpaPheno_SHAP_waterfall_plot(shap_test, \"TCGCCGGAGAGTCTTA-1\", top_n = 48)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"shap-dependence-plot","dir":"Articles","previous_headings":"Survival HCC","what":"SHAP dependence plot","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"TCell_subtypes <- unique(shap_test$feature)[str_detect(unique(shap_test$feature), \"CD.T\")] BCell_subtypes <- unique(shap_test$feature)[str_detect(unique(shap_test$feature), \"BCell\")] Monocyte_subtypes <- unique(shap_test$feature)[str_detect(unique(shap_test$feature), \"Monocyte\")] Macrophage_subtypes <- unique(shap_test$feature)[str_detect(unique(shap_test$feature), \"Macrophage\")]  SpaPheno_SHAP_dependence_plot(shap_test, TCell_subtypes) SpaPheno_SHAP_dependence_plot(shap_test, BCell_subtypes) SpaPheno_SHAP_dependence_plot(shap_test, Monocyte_subtypes) SpaPheno_SHAP_dependence_plot(shap_test, Macrophage_subtypes)"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"load-demo-data-1","dir":"Articles","previous_headings":"Survival BRCA","what":"load demo data","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"rm(list = ls())  load(\"BRCAsurvival.RData\")  ### survival phenotype TCGA_survival_each <- TCGA_BRCA$TCGA.BRCA.survival.tsv Survival_TCGA_choose <- as.data.frame(TCGA_survival_each) row.names(Survival_TCGA_choose) <- Survival_TCGA_choose[, 1]  ### common samples between survival phenotype and deconvolution sample_information_decon_TCGA_choose <- BRCA_decon[intersect(as.data.frame(TCGA_survival_each)[, 1], row.names(BRCA_decon)), ] Survival_TCGA_choose <- Survival_TCGA_choose[row.names(sample_information_decon_TCGA_choose), ]  ### survival object surv_obj <- Surv(Survival_TCGA_choose$OS.time, Survival_TCGA_choose$OS)  ### ST test_coordinate <- as.data.frame(cbind(BRCA_ST$x, BRCA_ST$y)) colnames(test_coordinate) <- c(\"X\", \"Y\") sample_information_region <- BRCA_ST$label bulk_decon <- sample_information_decon_TCGA_choose bulk_pheno <- surv_obj family <- \"cox\"  coord <- test_coordinate resolution <- \"spot\" colnames(bulk_decon) <- gsub(\"^[^_]*_[^_]*_[^_]*_sf_\", \"\", colnames(bulk_decon)) colnames(sample_information_decon) <- gsub(\"^[^_]*_[^_]*_[^_]*_sf_\", \"\", colnames(sample_information_decon))"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"ground-truth","dir":"Articles","previous_headings":"Survival BRCA","what":"Ground truth","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point(size = 4)"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"obtain-predicion-results","dir":"Articles","previous_headings":"Survival BRCA","what":"Obtain predicion results","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,    bulk_pheno = bulk_pheno,    family = \"cox\",    coord = test_coordinate,    resolution = \"spot\",    sample_information_decon = sample_information_decon,   size = 5,    n_perm = 1,    p = 0.001,    r = 2)"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"load-demo-data-2","dir":"Articles","previous_headings":"Survival KIRC","what":"load demo data","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"rm(list = ls()) load(\"KIRC_survival.RData\")  ### survival phenotype TCGA_survival_each <- TCGA_KIRC$TCGA.KIRC.survival.tsv Survival_TCGA_choose <- as.data.frame(TCGA_survival_each) row.names(Survival_TCGA_choose) <- Survival_TCGA_choose[, 1]  ### common samples between survival phenotype and deconvolution sample_information_decon_TCGA_choose <- KIRC_decon[intersect(as.data.frame(TCGA_survival_each)[, 1], row.names(KIRC_decon)), ] Survival_TCGA_choose <- Survival_TCGA_choose[row.names(sample_information_decon_TCGA_choose), ]  ### survival object surv_obj <- Surv(Survival_TCGA_choose$OS.time, Survival_TCGA_choose$OS)  test_coordinate <- as.data.frame(cbind(KIRC_ST$x, KIRC_ST$y)) colnames(test_coordinate) <- c(\"X\", \"Y\") sample_information_region <- KIRC_ST$TLSanno bulk_decon <- sample_information_decon_TCGA_choose bulk_pheno <- surv_obj family <- \"cox\"  coord <- test_coordinate resolution <- \"spot\" colnames(bulk_decon) <- gsub(\"^[^_]*_[^_]*_[^_]*_sf_\", \"\", colnames(bulk_decon)) colnames(sample_information_decon) <- gsub(\"^[^_]*_[^_]*_[^_]*_sf_\", \"\", colnames(sample_information_decon))"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"ground-truth-1","dir":"Articles","previous_headings":"Survival KIRC","what":"Ground Truth","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point(size = 2) +   scale_color_manual(     values = c(       \"TLS\" = \"#007ACC\",       \"NO_TLS\" = \"lightgray\"     ),     name = \"Region Type\",     labels = c(\"NO_TLS\", \"TLS\")   )"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"prediction-result","dir":"Articles","previous_headings":"Survival KIRC","what":"Prediction result","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,   bulk_pheno = bulk_pheno,    family = family,    coord = test_coordinate,    resolution = \"spot\",    sample_information_decon = sample_information_decon,    size = 1.5,    n_perm = 1,    p = 0.005,    r = 2 )"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"hclust-of-low-risk-region","dir":"Articles","previous_headings":"Survival KIRC","what":"Hclust of low risk region","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenotypeHclust(PhenoResult, \"phenotype-\", test_coordinate, size = 1.5)"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"load-data-2","dir":"Articles","previous_headings":"Stage HCC","what":"load data","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"rm(list = ls()) load(\"HCC_stage.RData\")  #### common samples between stage phenotype and deconvolution common_sample <- intersect(names(sample_information_stage), row.names(LIHC_decon)) LIHC_decon <- LIHC_decon[common_sample, ] sample_information_stage <- sample_information_stage[common_sample]   sample_information_region <- HCC_ST$TLSanno test_coordinate <- HCC_ST@meta.data[, 4:5] colnames(test_coordinate) <- c(\"X\", \"Y\")  bulk_decon <- LIHC_decon bulk_pheno <- sample_information_stage family <- \"gaussian\"  coord <- test_coordinate resolution <- \"spot\" sample_information_decon <- sample_information_decon  colnames(bulk_decon) <- gsub(\"^[^_]*_[^_]*_[^_]*_sf_\", \"\", colnames(bulk_decon)) colnames(sample_information_decon) <- gsub(\"^[^_]*_[^_]*_[^_]*_sf_\", \"\", colnames(sample_information_decon))  ### TLS label ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point(size = 1.5) +   scale_color_manual(     values = c(       \"TLS\" = \"#007ACC\",        \"nonTLS\" = \"lightgray\"      ),     name = \"Region Type\",     labels = c(\"Non-TLS\", \"TLS\")   )"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"obtain-prdiction-result","dir":"Articles","previous_headings":"Stage HCC","what":"Obtain prdiction result","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,   bulk_pheno = bulk_pheno,   family = family,   coord = test_coordinate,   resolution = \"spot\",    sample_information_decon = sample_information_decon,    size = 1.5,    n_perm = 1,    p = 0.001 )"},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"tutorial provides step--step demonstration apply SpaPheno R package predict interpret spatially informed phenotypes using spatial transcriptomic bulk-like simulated data. Across multiple datasets biological contexts—including simulated osmFISH STARmap, real-world HCC, BRCA, KIRC samples—guide illustrates core capabilities SpaPheno: Phenotype Simulation: shows simulate bulk-like phenotypic data spatial single-cell annotations, capturing cell-type composition per region. Model Building: Using logistic, linear, Cox proportional hazards model automated alpha selection, SpaPheno learns predictive model bulk deconvolution data phenotypic labels. Spatial Prediction: model applied back spatial neighborhoods (either spot single-cell resolution) estimate visualize spatial risk distributions. Permutation Testing: tool quantifies significance spatial predictions using randomized coordinate-based permutation testing. SHAP-based Interpretation: leveraging SHAP (SHapley Additive exPlanations), SpaPheno identifies important cell types contributing spatial phenotype risk, population single-cell levels. Residual & Dependence Analysis: SpaPheno offers residual maps dependence plots explore non-modeled effects spatial patterns, enhancing interpretability. essence, SpaPheno bridges spatial cellular architecture clinical experimental phenotypes, enabling researchers map spatial risk, decode key microenvironmental drivers, explore mechanistic underpinnings tissue-level phenotypes. reproducible tutorial serves valuable resource method developers biological researchers aiming explore spatial origins complex phenotypes.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/articles/SpaPheno-tutorial.html","id":"system-information","dir":"Articles","previous_headings":"","what":"System information","title":"SpaPheno Tutorial: Spatially-Informed Phenotype Prediction and Interpretation Using Single-Cell Data","text":"","code":"sessionInfo() ## R version 4.4.3 (2025-02-28) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Sequoia 15.5 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: Asia/Shanghai ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ##  [1] survival_3.8-3      reshape2_1.4.4      lubridate_1.9.4     ##  [4] forcats_1.0.0       stringr_1.5.1       dplyr_1.1.4         ##  [7] purrr_1.0.4         readr_2.1.5         tidyr_1.3.1         ## [10] tibble_3.3.0        ggplot2_3.5.2       tidyverse_2.0.0     ## [13] SpaPheno_0.0.1      BiocManager_1.30.25 BiocStyle_2.34.0    ##  ## loaded via a namespace (and not attached): ##  [1] pROC_1.18.5          gridExtra_2.3        rlang_1.1.6          ##  [4] magrittr_2.0.3       compiler_4.4.3       mgcv_1.9-1           ##  [7] systemfonts_1.2.1    vctrs_0.6.5          pkgconfig_2.0.3      ## [10] shape_1.4.6.1        fastmap_1.2.0        backports_1.5.0      ## [13] labeling_0.4.3       rmarkdown_2.29       prodlim_2024.06.25   ## [16] tzdb_0.5.0           ragg_1.3.3           xfun_0.51            ## [19] glmnet_4.1-8         cachem_1.1.0         jsonlite_2.0.0       ## [22] recipes_1.2.0        parallel_4.4.3       R6_2.6.1             ## [25] bslib_0.9.0          stringi_1.8.4        parallelly_1.43.0    ## [28] rpart_4.1.24         jquerylib_0.1.4      Rcpp_1.0.14          ## [31] bookdown_0.42        iterators_1.0.14     knitr_1.50           ## [34] future.apply_1.11.3  Metrics_0.1.4        FNN_1.1.4.1          ## [37] Matrix_1.7-2         splines_4.4.3        nnet_7.3-20          ## [40] timechange_0.3.0     tidyselect_1.2.1     rstudioapi_0.17.1    ## [43] yaml_2.3.10          viridis_0.6.5        timeDate_4041.110    ## [46] codetools_0.2-20     listenv_0.9.1        lattice_0.22-6       ## [49] plyr_1.8.9           withr_3.0.2          evaluate_1.0.3       ## [52] future_1.34.0        desc_1.4.3           pillar_1.10.1        ## [55] checkmate_2.3.2      foreach_1.5.2        stats4_4.4.3         ## [58] generics_0.1.3       hms_1.1.3            munsell_0.5.1        ## [61] scales_1.3.0         globals_0.16.3       class_7.3-23         ## [64] glue_1.8.0           tools_4.4.3          data.table_1.17.0    ## [67] ModelMetrics_1.2.2.2 gower_1.0.2          fs_1.6.5             ## [70] grid_4.4.3           ipred_0.9-15         colorspace_2.1-1     ## [73] nlme_3.1-167         SpaDo_1.2.0          cli_3.6.4            ## [76] iml_0.11.4           textshaping_1.0.0    viridisLite_0.4.2    ## [79] lava_1.8.1           gtable_0.3.6         sass_0.4.9           ## [82] digest_0.6.37        caret_7.0-1          farver_2.1.2         ## [85] htmlwidgets_1.6.4    htmltools_0.5.8.1    pkgdown_2.1.1        ## [88] lifecycle_1.0.4      hardhat_1.4.1        MASS_7.3-64"},{"path":"https://github.com/DuanLab1/SpaPheno/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Duan. Author, maintainer. Hua Zou. Author.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Duan B, Zou H (2025). SpaPheno: Spatially-Informed Phenotype Modeling. R package version 0.0.1, https://github.com/DuanLab1/SpaPheno.","code":"@Manual{,   title = {SpaPheno: Spatially-Informed Phenotype Modeling},   author = {Bin Duan and Hua Zou},   year = {2025},   note = {R package version 0.0.1},   url = {https://github.com/DuanLab1/SpaPheno}, }"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Spatially-Informed Phenotype Modeling","text":"SpaPheno R package designed identify, visualize, interpret spatial phenotype associations spatial transcriptomics simulated bulk data.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"sunny-key-features","dir":"","previous_headings":"","what":"☀️ Key Features","title":"Spatially-Informed Phenotype Modeling","text":"Construct predictive models cell type compositions phenotypic labels (e.g., disease presence). Map spatial risk distributions across tissues organs using spatially-aware neighborhood features. Assess statistical significance permutation-based tests. Interpret feature contributions using SHAP (SHapley Additive exPlanations) analysis single-cell resolution.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"arrow_double_down-installation","dir":"","previous_headings":"","what":"⏬ Installation","title":"Spatially-Informed Phenotype Modeling","text":"","code":"if (!require(\"BiocManager\", quietly = TRUE)) {   install.packages(\"BiocManager\") }  ## Install suggested packages # BiocManager::install(c( #   \"glmnet\", #   \"FNN\", #   \"survival\" # ))  # install.packages(\"devtools\") # devtools::install_github(\"DuanLab1/SpaPheno\", dependencies = c(\"Depends\", \"Imports\", \"LinkingTo\"))  library(SpaPheno) library(tidyverse) library(ggplot2) library(reshape2) library(stringr) library(survival)"},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"data-availability","dir":"","previous_headings":"🚀 Quick Start","what":"Data availability","title":"Spatially-Informed Phenotype Modeling","text":"data required test listed following directory SpaPheno Demo Data.","code":"├── BRCAsurvival.RData ├── HCC_stage.RData ├── HCC_survival.RData ├── KIRC_survival.RData ├── Melanoma_ICB.RData ├── Simulation_osmFISH.RData └── Simulation_STARmap.RData"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"simulation-osmfish","dir":"","previous_headings":"🚀 Quick Start","what":"Simulation osmFISH","title":"Spatially-Informed Phenotype Modeling","text":"tutorial demonstrates workflow SpaPheno using simulated osmFISH data, including: Loading visualizing spatial cell annotations. Defining simulated phenotypes across spatial regions. Generating pseudo-bulk samples phenotype modeling. Building logistic regression model via automated regularization selection. Performing spatial phenotype risk prediction. Interpreting key contributing cell types using SHAP values. Exploring spatial patterns model residuals biological insight. Together, pipeline allows researchers integrate spatial structure, cell composition, predictive modeling understand local cell-type environments contribute complex phenotypes.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"load-demo-data","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"load demo data","title":"Spatially-Informed Phenotype Modeling","text":"","code":"rm(list = ls())  load(\"Simulation_osmFISH.RData\")  ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_cellType)) +   geom_point(size = 1) ggplot(test_coordinate, aes(x = X, y = Y, color = sample_information_region)) +   geom_point(size = 1)"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"choose-simulated-phenotypes","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"Choose simulated phenotypes","title":"Spatially-Informed Phenotype Modeling","text":"","code":"region_all <- names(table(sample_information_region)) phenotype_simu <- region_all[c(3, 4)] sample_information_region_choose <- sample_information_region sample_information_region_choose[!sample_information_region_choose %in% phenotype_simu] <- NA"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"ground-truth-of-simulated-phenotypes","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"Ground truth of simulated phenotypes","title":"Spatially-Informed Phenotype Modeling","text":"","code":"custom_colors <- c(\"red\", \"lightgray\", \"blue\") names(custom_colors) <- c(phenotype_simu[2], \"Background\", phenotype_simu[1]) sample_information_region_choose[!sample_information_region_choose %in% phenotype_simu] <- \"Background\" Ground_truth <- factor(sample_information_region_choose[row.names(test_coordinate)], levels = c(phenotype_simu[1], \"Background\", phenotype_simu[2])) ggplot(test_coordinate, aes(x = X, y = Y, color = Ground_truth)) +   geom_point(size = 1) +   scale_color_manual(values = custom_colors)"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"simulating-bulk-data-with-phenotypes","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"Simulating bulk data with phenotypes","title":"Spatially-Informed Phenotype Modeling","text":"","code":"pseudo_bulk_simi <- generate_simulated_bulk_data(   input_data = sample_information_cellType,    region_labels = sample_information_region,    phenotypes = phenotype_simu,    perturbation_percent = 0.1,    num_samples = 50,    mode = \"proportion\")  pseudo_bulk_df1 <- pseudo_bulk_simi[[1]] pseudo_bulk_df2 <- pseudo_bulk_simi[[2]]  bulk_decon <- t(as.matrix(cbind(pseudo_bulk_df1, pseudo_bulk_df2))) bulk_pheno <- rep(c(0, 1), each = 50) names(bulk_pheno) <- c(colnames(pseudo_bulk_df1), colnames(pseudo_bulk_df2)) family <- \"binomial\""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"obtaining-prediction-results","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"Obtaining prediction results","title":"Spatially-Informed Phenotype Modeling","text":"","code":"PhenoResult <- SpatialPhenoMap(   bulk_decon = bulk_decon,    bulk_pheno = bulk_pheno,    family = family,    coord = test_coordinate,    resolution = \"single_cell\",    sample_information_cellType = sample_information_cellType,    n_perm = 1,    p = 0.001)"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"shap-analysis","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"SHAP analysis","title":"Spatially-Informed Phenotype Modeling","text":"","code":"pred_result <- PhenoResult[[1]] phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ])  model <- PhenoResult[[3]] X <- as.data.frame(PhenoResult[[2]][phenoPlus, ]) ### Not run, this step may take a few mininutes # shap_test_plus<-compute_shap_spatial(model,as.data.frame(bulk_decon),bulk_pheno,X) head(shap_test_plus)"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"shap-summary-plot","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"SHAP summary plot","title":"Spatially-Informed Phenotype Modeling","text":"","code":"SpaPheno_SHAP_summary_plot(shap_test_plus, top_n = 31)"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"shap-residual-analysis","dir":"","previous_headings":"🚀 Quick Start > Simulation osmFISH","what":"SHAP residual analysis","title":"Spatially-Informed Phenotype Modeling","text":"","code":"resi_result <- SpaPheno_SHAP_residual_analysis(   shap_df = shap_test_plus,   feature_name = \"Perivascular.Macrophages\",   coordinate_df = test_coordinate, size = 0.8 ) resi_hot <- resi_result$residual_table head(resi_hot[order(abs(resi_hot$phi_resid_z), decreasing = T), ], 5) SpaPheno_SHAP_waterfall_plot(shap_test_plus, \"cell_5593\", top_n = 10) resi_result$dependence_plot resi_result$spatial_plot"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"book-vignette","dir":"","previous_headings":"","what":"📖 Vignette","title":"Spatially-Informed Phenotype Modeling","text":"Using following command Choosing html details.","code":"utils::browseVignettes(package = \"SpaPheno\")"},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"sparkling_heart-contributing","dir":"","previous_headings":"","what":"💖 Contributing","title":"Spatially-Informed Phenotype Modeling","text":"Welcome contributions comments, can file .","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"trophy-acknowledgement","dir":"","previous_headings":"","what":"🏆 Acknowledgement","title":"Spatially-Informed Phenotype Modeling","text":"Thanks developers methods integrated SpaPheno.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"eight_pointed_black_star-citation","dir":"","previous_headings":"","what":"✴️ Citation","title":"Spatially-Informed Phenotype Modeling","text":"Kindly cite using citation(\"SpaPheno\") think SpaPheno helps . Alternative way Bin Duan (2025). SpaPheno: Spatially-Informed Phenotype Prediction Interpretation Using Single-Cell Data. R package version 0.0.1, <URL:https://github.com/DuanLab1/SpaPheno/>.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/index.html","id":"writing_hand-authors","dir":"","previous_headings":"","what":"✍️ Authors","title":"Spatially-Informed Phenotype Modeling","text":"Bin Duan Hua Zou","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"function builds Elastic Net model using glmnet, automatic alpha selection via cross-validation. supports generalized linear models survival analysis (Cox), binary classification, regression tasks.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"","code":"BuildPhenoModelAutoAlpha(   expr,   pheno,   family = c(\"cox\", \"binomial\", \"gaussian\"),   nfolds = 10,   seed = 2025 )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"expr numeric matrix data.frame gene expression cell-type proportion data (samples × features). pheno response vector phenotypes: survival object, binary labels, continuous outcomes. family Character string indicating type outcome. Must one \"cox\", \"binomial\", \"gaussian\". nfolds Number folds use cross-validation. Default 10. seed Random seed reproducibility. Default 2025.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"list following components: model fitted cv.glmnet object best alpha. lambda lambda.min value corresponding best alpha. alpha optimal alpha value selected.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"function performs K-fold cross-validation across range alpha values identify optimal alpha minimizes cross-validation error. best alpha selected, model re-trained using alpha. Applicable families: \"cox\": Cox proportional hazards model (survival) \"binomial\": Logistic regression (binary classification) \"gaussian\": Linear regression (continuous outcomes)","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/BuildPhenoModelAutoAlpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build Elastic Net Model with Automatic Alpha Selection — BuildPhenoModelAutoAlpha","text":"","code":"if (FALSE) { # \\dontrun{ # Binary phenotype example data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") model <- BuildPhenoModelAutoAlpha(   expr = osmFISH_bulk_decon,   pheno = osmFISH_bulk_pheno,   family = \"binomial\")  # Survival example library(survival) surv_obj <- Surv(time = c(5, 10, 15), event = c(1, 0, 1)) model <- BuildPhenoModelAutoAlpha(   expr = matrix(rnorm(30), nrow = 3),   pheno = surv_obj,   family = \"cox\") } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"Computes local cell type composition spot cell based spatial proximity. Supports single-cell resolution using nearest neighbors spot-level resolution using distance thresholding cell type proportions.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"","code":"Cell_type_neighborhood(   sample_information_coordinate,   resolution = c(\"single_cell\", \"spot\"),   sample_information_cellType = NULL,   sample_information_decon = NULL,   k = 50,   r = 4 )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"sample_information_coordinate data.frame matrix spatial coordinates (x, y). Row names must correspond cell spot IDs. resolution One \"single_cell\" \"spot\". sample_information_cellType Named vector cell types single-cell resolution. Names must match rownames sample_information_coordinate. sample_information_decon matrix cell type proportions per spot (\"spot\" mode). Row names must match sample_information_coordinate. k Integer, number nearest neighbors (used \"single_cell\" mode). Default 50. r Numeric, distance threshold neighborhood (used \"spot\" mode). Default 4.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"matrix normalized cell type proportions spatial unit (rows) across cell types (columns).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"function calculates distribution cell types around spatial unit using one following modes: \"single_cell\": Uses discrete cell-type labels K-nearest neighbors. \"spot\": Uses continuous deconvolution proportions radius threshold. returned matrix represents normalized cell-type compositions local neighborhood.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Cell_type_neighborhood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Local Cell Type Composition in the Spatial Neighborhood — Cell_type_neighborhood","text":"","code":"if (FALSE) { # \\dontrun{ data(\"osmFISH_metadata_cellType\") data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  Cell_type_neighborhood(   sample_information_coordinate = osmFISH_bulk_coordinate,   resolution = \"single_cell\",   sample_information_cellType = osmFISH_metadata_cellType )  } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"Visualizes feature coefficients penalized regression model fitted glmnet. Positive negative coefficients color-coded better interpretation.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"","code":"FeatureImportanceCoef(model)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"model fitted glmnet model object includes components model lambda, output BuildPhenoModelAutoAlpha() cv.glmnet().","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"ggplot2 object showing feature coefficients direction-based color coding.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"function extracts non-zero coefficients optimal lambda glmnet model object. removes intercept term displays horizontal bar plot using ggplot2. Coefficients sorted enhance readability.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/FeatureImportanceCoef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Feature Coefficients from a glmnet Model — FeatureImportanceCoef","text":"","code":"if (FALSE) { # \\dontrun{ library(glmnet) x <- matrix(rnorm(100 * 20), nrow = 100, ncol = 20) y <- sample(c(0, 1), 100, replace = TRUE) fit <- cv.glmnet(x, y, family = \"binomial\") FeatureImportanceCoef(model = model) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"Generates phenotype prediction scores based permuted spatial coordinates, enabling permutation-based significance testing spatial features glmnet models.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"","code":"GeneratePermutations(   model,   resolution = c(\"spot\", \"single_cell\"),   coordinate = NULL,   family = c(\"cox\", \"binomial\", \"gaussian\"),   r = 2,   k = 50,   n = 50,   seed = 2025,   sample_information_decon = NULL,   sample_information_cellType = NULL )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"model fitted glmnet model object, typically cv.glmnet(), containing model lambda. resolution Character; one \"spot\" \"single_cell\". coordinate matrix data.frame spatial coordinates. Row names must match spot cell IDs. family Character; glmnet family used prediction (\"cox\", \"binomial\", \"gaussian\"). r Numeric; radius neighborhood definition (used \"spot\"). Default 2. k Integer; number neighbors (used \"single_cell\"). Default 50. n Integer; number permutations run. Default 50. seed Integer; random seed reproducibility. Default 2025. sample_information_decon list spot-level cell type proportions (used resolution = \"spot\"). entry data.frame rows spots columns cell types. sample_information_cellType list single-cell annotations (used resolution = \"single_cell\"). entry character vector cell types.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"numeric vector predicted phenotype scores permutation replicate.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"function permutes row names coordinate matrix shuffle spatial positions, recalculates local cell type neighborhood features via Cell_type_neighborhood(), predicts phenotype scores using input glmnet model. process repeated n times generate null distribution prediction scores. function relies : sample_information_decon: global matrix cell type proportions (spot mode). sample_information_cellType: global named vector cell types (single-cell mode).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/GeneratePermutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Permutation Scores for Model Significance Testing — GeneratePermutations","text":"","code":"if (FALSE) { # \\dontrun{  data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  model <- BuildPhenoModelAutoAlpha(   expr = osmFISH_bulk_decon,   pheno = osmFISH_bulk_pheno,   family = \"binomial\")  data(\"osmFISH_metadata_cellType\") perm_scores <- GeneratePermutations(   model = model,   resolution = \"single_cell\",   coordinate = osmFISH_bulk_coordinate,   family = \"binomial\",   r = 2,   n = 100,   sample_information_cellType = osmFISH_metadata_cellType ) hist(perm_scores, breaks = 20, main = \"Permutation Null Distribution\") } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"function computes average abundance cell type stratified phenotype labels visualizes result using line plot. Labels based prediction scores user-provided values.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"","code":"PhenoAbundancePlot(cell_type_distribution, pred_score)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"cell_type_distribution data.frame matrix cell type proportions per spot (rows = spots, columns = cell types). pred_score data.frame prediction scores. Must contain least column \"pred_score\" optional \"label\". Row names match cell_type_distribution.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"ggplot2 object showing average cell type abundance across phenotype groups.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"plot useful interpreting cell type composition differs across predicted phenotypic groups. Input data contain cell type proportions prediction scores associated phenotype labels.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenoAbundancePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Average Cell Type Abundance by Phenotype Label — PhenoAbundancePlot","text":"","code":"if (FALSE) { # \\dontrun{ cell_type_distribution <- matrix(runif(300), nrow = 100,   dimnames = list(paste0(\"spot\", 1:100), paste0(\"cell\", 1:3))) pred_score <- data.frame(   pred_score = rnorm(100),   label = sample(c(\"phenotype+\", \"phenotype-\", \"background\"), 100, replace = TRUE),   row.names = paste0(\"spot\", 1:100) ) PhenoAbundancePlot(cell_type_distribution, pred_score) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":null,"dir":"Reference","previous_headings":"","what":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"function performs phenotype-stratified hierarchical clustering cell type proportions using Jensen-Shannon Divergence (JSD) distance metric. visualizes average cell type distributions across identified clusters/domains.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"","code":"PhenotypeHclust(   PhenotypeMap_result,   phenotype = c(\"phenotype-\", \"phenotype+\"),   coordinate,   k = 2,   size = 2 )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"PhenotypeMap_result list least: cell_type_distribution: Matrix data.frame cell type proportions (rows = spots). pred_score: Data.frame phenotype labels. Row names must match distribution matrix. phenotype Character string indicating phenotype label subset. Default \"phenotype-\". coordinate data.frame spatial coordinates spot/cell. Used spatial plotting. k Integer; number clusters/domains define. Default 2. size Numeric; point size used SpaDo::DomainPlot. Default 2.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"ggplot2 object displaying mean cell type proportions per identified domain.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"function filters spots/cells specified phenotype label, computes pairwise JSD distances, applies hierarchical clustering, visualizes mean cell type profiles domain. Requires SpaDo package clustering plotting domains. devtools::install_github(\"bm2-lab/SpaDo\").","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypeHclust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phenotype-based Hierarchical Clustering and Visualization of Cell Type Distributions — PhenotypeHclust","text":"","code":"if (FALSE) { # \\dontrun{ res <- list(   cell_type_distribution = cell_type_df,   pred_score = phenotype_df ) PhenotypeHclust(res, phenotype = \"phenotype+\", coordinate = coord_df, k = 3) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"Visualizes phenotype prediction scores spatial coordinates highlights spatial units statistically significant scores based permutation-derived null distributions.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"","code":"PhenotypePlot(coordinate, prediction, permutation, size = 1, p = 0.01)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"coordinate data.frame matrix two columns (x, y). Row names match prediction order. prediction numeric vector phenotype prediction scores spatial unit. permutation numeric vector permutation null distribution. size Numeric; point size spatial plot. Default 1. p Numeric; two-sided significance level (0 1). Default 0.01.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"combined ggplot2 visualization spatial points legend, rendered using gridExtra::grid.arrange.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"Points scores upper threshold (top 1 - p) shown shades red, lower threshold (bottom p) shades blue. Non-significant points shown gray. separate side legend visualizes score gradient labels phenotype interpretation.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/PhenotypePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Spatial Phenotype Significance Map with Permutation Thresholds — PhenotypePlot","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) coords <- data.frame(x = runif(100), y = runif(100)) pred <- rnorm(100) perm <- rnorm(1000) PhenotypePlot(coords, pred, perm) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"Computes macro-averaged precision, recall, F1 score using confusion matrix true labels predicted labels. Suitable multi-class classification tasks.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"","code":"Precision_Recall_macroF1(actual, predicted)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"actual vector true class labels. predicted vector predicted class labels (must length actual).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"named list containing: Precision: Macro-averaged precision across classes. Recall: Macro-averaged recall across classes. f1_score: Macro-averaged F1 score.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"Macro-averaging computes mean metric (precision, recall, F1) classes, treating classes equally regardless support. Missing values due undefined metrics excluded averaging (e.g., divisions zero).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/Precision_Recall_macroF1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Macro-Averaged Precision, Recall, and F1 Score for Multiclass Classification — Precision_Recall_macroF1","text":"","code":"if (FALSE) { # \\dontrun{ actual <- c(\"A\", \"B\", \"A\", \"C\", \"B\", \"C\") predicted <- c(\"A\", \"B\", \"C\", \"C\", \"B\", \"A\") Precision_Recall_macroF1(actual, predicted) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/STplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Transcriptomics Scatter Plot with Labels — STplot","title":"Spatial Transcriptomics Scatter Plot with Labels — STplot","text":"function creates scatter plot spatial coordinates colored labels. useful visualizing spatial transcriptomics spatial data sample annotations.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/STplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Transcriptomics Scatter Plot with Labels — STplot","text":"","code":"STplot(coordinate, label, size = 1)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/STplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Transcriptomics Scatter Plot with Labels — STplot","text":"coordinate data frame containing spatial coordinates. Must columns named 'X' 'Y'. Row names correspond spots cells. label named vector factor labels corresponding rows `coordinate`. function reorder labels match coordinate row order. size Numeric. size points plot. Default 1.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/STplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Transcriptomics Scatter Plot with Labels — STplot","text":"ggplot2 scatter plot object showing spatial distribution colored label.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/STplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spatial Transcriptomics Scatter Plot with Labels — STplot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/STplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Transcriptomics Scatter Plot with Labels — STplot","text":"","code":"if (FALSE) { # \\dontrun{ coord_df <- data.frame(X = runif(100), Y = runif(100)) rownames(coord_df) <- paste0(\"spot\", 1:100) labels <- sample(c(\"TypeA\", \"TypeB\"), 100, replace = TRUE) names(labels) <- rownames(coord_df) STplot(coord_df, labels) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"Visualizes relationship SHAP values corresponding feature values across samples, stratified selected features.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"","code":"SpaPheno_SHAP_dependence_plot(shap_df, feature_names, title = NULL)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"shap_df data.frame SHAP output. Must contain columns: feature: Name feature. feature.value: actual value feature sample. phi: SHAP value associated feature/sample. feature_names Character vector feature names include plot. title Optional character string plot title. Default \"SHAP Dependence Plot\".","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"ggplot2 object showing SHAP dependence plots selected features.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"function generates scatter plot SHAP values versus feature values, overlaid LOESS smoothed curve. feature specified feature_names plotted separate facet panel. Useful interpreting directionality interaction effects SHAP-based model explanations.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_dependence_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHAP Dependence Plot for Selected Features — SpaPheno_SHAP_dependence_plot","text":"","code":"if (FALSE) { # \\dontrun{ shap_df <- data.frame(   feature = rep(c(\"GeneA\", \"GeneB\"), each = 50),   feature.value = rnorm(100),   phi = rnorm(100) ) SpaPheno_SHAP_dependence_plot(shap_df, c(\"GeneA\", \"GeneB\"), title = \"Example SHAP Plot\") } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"Performs residual-based SHAP analysis selected feature, identifying outliers based SHAP residuals visualizing spatial dependence plots.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"","code":"SpaPheno_SHAP_residual_analysis(   shap_df,   feature_name,   coordinate_df,   size = 1,   title = \"SHAP Residual Distribution\" )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"shap_df data.frame containing SHAP results least columns: feature, phi, feature.value, sample. feature_name Character; feature (e.g., gene) analyze. coordinate_df data.frame spatial coordinates rownames matching sample IDs; must contain columns named X Y. size Numeric; point size plotting. Default 1. title Character; title spatial residual plot. Default \"SHAP Residual Distribution\".","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"list containing: spatial_plot: ggplot2 object showing spatial distribution SHAP residuals. dependence_plot: SHAP dependence plot residual outlier groups. residual_table: data.frame residuals, Z-scores, group annotations.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"function regresses SHAP values feature values obtain residuals, uses Z-score normalization identify spatial units unusually high low SHAP effects explained raw expression. results visualized spatially enhanced SHAP dependence plots. Residual outliers defined : Z ≥ 2: High residual Z ≤ -2: Low residual Otherwise: Normal","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_residual_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residual-based SHAP Analysis and Visualization in Spatial Transcriptomics — SpaPheno_SHAP_residual_analysis","text":"","code":"if (FALSE) { # \\dontrun{  data(\"osmFISH_metadata_cellType\") data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  PhenoResult <- SpatialPhenoMap(   bulk_decon = osmFISH_bulk_decon,   bulk_pheno = osmFISH_bulk_pheno,   family = \"binomial\",   coord = osmFISH_bulk_coordinate,   resolution = \"single_cell\",   sample_information_cellType = osmFISH_metadata_cellType )  pred_result <- PhenoResult$pred_score phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ]) model <- PhenoResult$model X <- as.data.frame(PhenoResult$cell_type_distribution[phenoPlus, ])  # This step took a very long time shap_test_plus <- compute_shap_spatial(   model = model,   X_bulk = as.data.frame(osmFISH_bulk_decon),   y_bulk = osmFISH_bulk_pheno,   X_spatial = X)  resi_result <- SpaPheno_SHAP_residual_analysis( shap_df = shap_test_plus, feature_name = \"Perivascular.Macrophages\", coordinate_df = test_coordinate, size = 0.8 ) resi_hot <- resi_result$residual_table head(resi_hot[order(abs(resi_hot$phi_resid_z), decreasing = T), ], 5) SpaPheno_SHAP_waterfall_plot(shap_test_plus, \"cell_5593\", top_n = 10) resi_result$dependence_plot resi_result$spatial_plot  } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"Generate SHAP summary plot visualize distribution, direction, magnitude SHAP values top contributing features spatial transcriptomics model.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"","code":"SpaPheno_SHAP_summary_plot(shap_df, top_n = 10)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"shap_df data.frame containing SHAP values. Must include least columns: feature, phi (SHAP value), feature.value. top_n Integer; number top features include plot. Default 10.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"ggplot2 object displaying SHAP summary plot top features.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"function selects top `n` features ranked mean absolute SHAP value, displays scatter plot SHAP contributions. point colored corresponding feature value, allowing joint interpretation importance directionality.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_summary_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHAP Summary Plot — SpaPheno_SHAP_summary_plot","text":"","code":"if (FALSE) { # \\dontrun{ data(\"osmFISH_metadata_cellType\") data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  PhenoResult <- SpatialPhenoMap(   bulk_decon = osmFISH_bulk_decon,   bulk_pheno = osmFISH_bulk_pheno,   family = \"binomial\",   coord = osmFISH_bulk_coordinate,   resolution = \"single_cell\",   sample_information_cellType = osmFISH_metadata_cellType )  pred_result <- PhenoResult$pred_score phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ]) model <- PhenoResult$model X <- as.data.frame(PhenoResult$cell_type_distribution[phenoPlus, ])  # This step took a very long time shap_test_plus <- compute_shap_spatial(   model = model,   X_bulk = as.data.frame(osmFISH_bulk_decon),   y_bulk = osmFISH_bulk_pheno,   X_spatial = X)  SpaPheno_SHAP_summary_plot(shap_test_plus, top_n = 31)  } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"Generate SHAP waterfall plot visualize influential features contributing model's prediction given sample. Features ordered magnitude SHAP values, color-coded direction (positive/negative).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"","code":"SpaPheno_SHAP_waterfall_plot(shap_df, sample_id, top_n = 10)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"shap_df data.frame SHAP results. Must include: sample, feature, phi columns. sample_id string. ID sample visualize (must match sample shap_df). top_n Integer; number top features include. Default 10.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"ggplot2 object displaying SHAP waterfall plot.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"- Filters SHAP values selected sample_id. - Selects top top_n features based absolute SHAP value. - Plots bars horizontally using ggplot2, colored contribution sign.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpaPheno_SHAP_waterfall_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHAP Waterfall Plot for a Single Sample — SpaPheno_SHAP_waterfall_plot","text":"","code":"if (FALSE) { # \\dontrun{  data(\"osmFISH_metadata_cellType\") data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  PhenoResult <- SpatialPhenoMap(   bulk_decon = osmFISH_bulk_decon,   bulk_pheno = osmFISH_bulk_pheno,   family = \"binomial\",   coord = osmFISH_bulk_coordinate,   resolution = \"single_cell\",   sample_information_cellType = osmFISH_metadata_cellType )  pred_result <- PhenoResult$pred_score phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ]) model <- PhenoResult$model X <- as.data.frame(PhenoResult$cell_type_distribution[phenoPlus, ])  # This step took a very long time shap_test_plus <- compute_shap_spatial(   model = model,   X_bulk = as.data.frame(osmFISH_bulk_decon),   y_bulk = osmFISH_bulk_pheno,   X_spatial = X)  SpaPheno_SHAP_waterfall_plot(shap_test_plus, sample_id = \"cell_3477\", top_n = 10)  } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"Given matrix spatial coordinates, function computes k-nearest neighbors (KNN) point using Euclidean distance. returns neighbor indices distances.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"","code":"SpatialKNN(sample_information_coordinate, k = 50)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"sample_information_coordinate data.frame matrix. Rows spatial units (e.g., cells spots), columns coordinates (e.g., x y). k Integer. Number nearest neighbors compute (default = 50).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"list : knn_value matrix distances k nearest neighbors (first column self, distance 0). knn_sample matrix neighbor names (cell/spot IDs), self first column.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"- input coordinate matrix must rownames corresponding spot cell IDs. - output includes neighbor matrix first column self point. - Distances self set 0 definition.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialKNN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute K-Nearest Neighbors for Spatial Coordinates — SpatialKNN","text":"","code":"if (FALSE) { # \\dontrun{ coords <- data.frame(x = runif(10), y = runif(10)) rownames(coords) <- paste0(\"cell\", 1:10) result <- SpatialKNN(coords, k = 3) result$knn_sample result$knn_value } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialPhenoMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","title":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","text":"Perform interpretable phenotype projection bulk transcriptomic phenotypes spatial transcriptomics data using elastic net modeling SHAP-based spatial mapping.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialPhenoMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","text":"","code":"SpatialPhenoMap(   bulk_decon,   bulk_pheno,   family = c(\"cox\", \"binomial\", \"gaussian\"),   coord,   resolution = \"spot\",   sample_information_decon = NULL,   sample_information_cellType = NULL,   k = 50,   r = 2,   p = 0,   size = 1,   n_perm = 10,   seed = 2025,   nfolds = 10 )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialPhenoMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","text":"bulk_decon matrix data.frame bulk samples (rows) cell type proportions (columns), typically deconvolution. bulk_pheno named vector bulk phenotypes. Can binary labels (e.g., 0/1), survival time, continuous traits. Names must match rownames(bulk_decon). family Modeling family. One \"cox\" (survival), \"binomial\" (classification), \"gaussian\" (regression). coord named list spatial coordinate matrices spatial sample (data.frame x, y). resolution Spatial resolution. One \"spot\" (e.g., 10x Visium) \"single_cell\" (e.g., MERFISH, CosMx). sample_information_decon list spot-level cell type proportions (used resolution = \"spot\"). entry data.frame rows spots columns cell types. sample_information_cellType list single-cell annotations (used resolution = \"single_cell\"). entry character vector cell types. k Number spatial neighbors consider KNN-based feature construction. Default 50. r Number spatial shells/layers context expansion. Default 2. p SHAP value threshold phenotype labeling significance testing. Default 0. size Point size used visualization plots. Default 1. n_perm Number permutations significance estimation. Default 10. seed Random seed reproducibility. Default 2025. nfolds Number cross-validation folds elastic net modeling. Default 10.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialPhenoMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","text":"list containing: pred_score data.frame prediction scores assigned phenotype labels. cell_type_distribution Feature matrix used prediction. model Trained elastic net model object.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialPhenoMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/SpatialPhenoMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Bulk Phenotype to Spatial Transcriptomics via Interpretable Modeling — SpatialPhenoMap","text":"","code":"if (FALSE) { # \\dontrun{  data(\"osmFISH_metadata_cellType\") data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  result <- SpatialPhenoMap(   bulk_decon = osmFISH_bulk_decon,   bulk_pheno = osmFISH_bulk_pheno,   family = \"binomial\",   coord = osmFISH_bulk_coordinate,   resolution = \"single_cell\",   sample_information_cellType = osmFISH_metadata_cellType ) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/ThresholdPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","title":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","text":"Visualizes density distribution prediction scores comparison null distribution (e.g., permutation), highlights statistically significant regions based two-tailed threshold. useful visually identifying predictions deviate meaningfully chance expectation.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/ThresholdPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","text":"","code":"ThresholdPlot(prediction, permutation, p = 0.01)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/ThresholdPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","text":"prediction numeric vector predicted scores. permutation numeric vector representing null distribution (e.g., scores permutations). p Numeric, significance level defining extreme regions (two-tailed). Default 0.01.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/ThresholdPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","text":"return value. function generates base R plot showing density curves prediction permutation distributions, shaded areas representing values beyond significance thresholds.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/ThresholdPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/ThresholdPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Prediction vs. Permutation Distributions with Significance Thresholds — ThresholdPlot","text":"","code":"set.seed(123) pred <- rnorm(1000, mean = 0.5) perm <- rnorm(1000) ThresholdPlot(prediction = pred, permutation = perm, p = 0.01)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"function computes SHAP (SHapley Additive exPlanations) values spatial transcriptomics data using predictive model trained bulk RNA-seq data. returns long-format data frame one row per sample-feature pair.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"","code":"compute_shap_spatial(model, X_bulk, y_bulk, X_spatial)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"model fitted glmnet model object (e.g., cv.glmnet) named elements $model $lambda. X_bulk numeric matrix data.frame bulk RNA-seq gene expression (samples × features). y_bulk numeric vector phenotype labels corresponding X_bulk. X_spatial numeric matrix data.frame spatial transcriptomics expression (samples × features).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"data.frame SHAP values sample-feature pair columns: feature: Feature (gene) name. phi: SHAP value feature. sample: spatial sample identifier. feature.value: Original feature expression value.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"Normalizes X_bulk row-wise sum ensure comparability across samples. Replaces NA NaN X_spatial 0 ensure model stability. Ensures feature alignment column order consistency bulk spatial datasets. Computes SHAP values using iml::Shapley class spatial unit.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/compute_shap_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute SHAP Values for Spatial Transcriptomics Data — compute_shap_spatial","text":"","code":"if (FALSE) { # \\dontrun{  data(\"osmFISH_metadata_cellType\") data(\"osmFISH_bulk_decon\") data(\"osmFISH_bulk_pheno\") data(\"osmFISH_bulk_coordinate\")  PhenoResult <- SpatialPhenoMap(   bulk_decon = osmFISH_bulk_decon,   bulk_pheno = osmFISH_bulk_pheno,   family = \"binomial\",   coord = osmFISH_bulk_coordinate,   resolution = \"single_cell\",   sample_information_cellType = osmFISH_metadata_cellType )  pred_result <- PhenoResult$pred_score phenoPlus <- row.names(pred_result[pred_result$label %in% \"phenotype+\", ]) model <- PhenoResult$model X <- as.data.frame(PhenoResult$cell_type_distribution[phenoPlus, ])  # This step took a very long time shap_test_plus <- compute_shap_spatial(   model = model,   X_bulk = as.data.frame(osmFISH_bulk_decon),   y_bulk = osmFISH_bulk_pheno,   X_spatial = X) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"Simulates pseudo-bulk data single-cell spatial transcriptomics input aggregating data across regions/phenotypes, optional perturbation.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"","code":"generate_simulated_bulk_data(   input_data,   region_labels,   phenotypes,   perturbation_percent = 0.1,   num_samples = 50,   mode = c(\"proportion\", \"expression\"),   seed = 123 )"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"input_data matrix data.frame. mode = \"expression\", numeric matrix rows genes columns spots. \"proportion\", can vector cell types. region_labels named vector phenotype labels. Names must match column names (spots) input_data. phenotypes character vector two phenotype labels compare, e.g., c(\"\", \"B\"). perturbation_percent Numeric; percentage (0 1) random noise add. Default 0.1. num_samples Integer; number pseudo-bulk samples generate phenotype. Default 50. mode Character; either \"expression\" \"proportion\". Default \"proportion\". seed Integer; random seed reproducibility. Default 123.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"list two data.frames: First element: pseudo-bulk samples phenotype Second element: pseudo-bulk samples phenotype II","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"function supports two modes: \"expression\": Uses numeric expression matrix (e.g., genes × spots). \"proportion\": Uses categorical input (e.g., cell type labels) converts proportions. phenotype group, function randomly perturbs data averages columns simulate multiple pseudo-bulk samples. useful benchmarking downstream analysis.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"Bin Duan","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/generate_simulated_bulk_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Simulated Pseudo-Bulk Data for Two Phenotypes — generate_simulated_bulk_data","text":"","code":"if (FALSE) { # \\dontrun{ # Simulate from gene expression matrix gene_mat <- matrix(runif(1000), nrow = 100, ncol = 10) colnames(gene_mat) <- paste0(\"Spot\", 1:10) labels <- setNames(rep(c(\"A\", \"B\"), each = 5), colnames(gene_mat)) result <- generate_simulated_bulk_data(   input_data = gene_mat,   region_labels = labels,   phenotypes = c(\"A\", \"B\"),   mode = \"expression\" )  data(\"osmFISH_metadata_cellType\") data(\"osmFISH_metadata_region\") data(\"osmFISH_phenotype_simu\") pseudo_bulk_simi <- generate_simulated_bulk_data(   input_data = osmFISH_metadata_cellType,   region_labels = osmFISH_metadata_region,   phenotypes = osmFISH_phenotype_simu,   perturbation_percent = 0.1,   num_samples = 50,   mode = \"proportion\")  head(pseudo_bulk_simi[[1]]) } # }"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_coordinate.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Coordinates for Simulated Bulk Samples (osmFISH) — osmFISH_bulk_coordinate","title":"Spatial Coordinates for Simulated Bulk Samples (osmFISH) — osmFISH_bulk_coordinate","text":"data frame containing spatial (X, Y) coordinates cell spot simulated osmFISH dataset. coordinates used mapping spatial distributions, computing neighborhood features, visualizing predicted phenotypic risk across tissue.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_coordinate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Coordinates for Simulated Bulk Samples (osmFISH) — osmFISH_bulk_coordinate","text":"","code":"data(osmFISH_bulk_coordinate)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_coordinate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial Coordinates for Simulated Bulk Samples (osmFISH) — osmFISH_bulk_coordinate","text":"data frame rows corresponding cells spatial units two columns: X horizontal spatial coordinate. Y vertical spatial coordinate. Row names unique cell spot identifiers match used associated `osmFISH_bulk_decon` `osmFISH_metadata_cellType` objects.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_coordinate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial Coordinates for Simulated Bulk Samples (osmFISH) — osmFISH_bulk_coordinate","text":"Derived spatial layout osmFISH simulation dataset used SpaPheno.","code":""},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_coordinate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial Coordinates for Simulated Bulk Samples (osmFISH) — osmFISH_bulk_coordinate","text":"","code":"data(osmFISH_bulk_coordinate) head(osmFISH_bulk_coordinate) #>                  X         Y #> cell_778  18171.23 24590.795 #> cell_1409 19838.08  6456.145 #> cell_3642 11247.43 36626.892 #> cell_1302 19253.23  7389.731 #> cell_1285 19612.53 10793.161 #> cell_769  18374.30 26286.857 plot(osmFISH_bulk_coordinate$X, osmFISH_bulk_coordinate$Y, pch = 20)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_decon.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Pseudo-Bulk Deconvolved Cell Type Compositions (osmFISH) — osmFISH_bulk_decon","title":"Simulated Pseudo-Bulk Deconvolved Cell Type Compositions (osmFISH) — osmFISH_bulk_decon","text":"matrix representing simulated pseudo-bulk deconvolution results, row corresponds bulk sample column represents cell type proportion.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_decon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Pseudo-Bulk Deconvolved Cell Type Compositions (osmFISH) — osmFISH_bulk_decon","text":"","code":"osmFISH_bulk_decon"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_decon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Pseudo-Bulk Deconvolved Cell Type Compositions (osmFISH) — osmFISH_bulk_decon","text":"numeric matrix dimensions 100 x N (e.g., 100 bulk samples × 20 cell types). Row names pseudo-bulk sample IDs, column names cell type names.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_decon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Pseudo-Bulk Deconvolved Cell Type Compositions (osmFISH) — osmFISH_bulk_decon","text":"Generated `generate_simulated_bulk_data()` using simulated osmFISH single-cell input.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_pheno.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Phenotypic Labels for Pseudo-Bulk Samples (osmFISH) — osmFISH_bulk_pheno","title":"Simulated Phenotypic Labels for Pseudo-Bulk Samples (osmFISH) — osmFISH_bulk_pheno","text":"named numeric vector containing binary phenotypic labels (e.g., 0/1) pseudo-bulk sample. labels used target variable phenotype prediction models.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_pheno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Phenotypic Labels for Pseudo-Bulk Samples (osmFISH) — osmFISH_bulk_pheno","text":"","code":"osmFISH_bulk_pheno"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_pheno.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Phenotypic Labels for Pseudo-Bulk Samples (osmFISH) — osmFISH_bulk_pheno","text":"named numeric vector length 100. Names sample IDs, values binary phenotype labels.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_bulk_pheno.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Phenotypic Labels for Pseudo-Bulk Samples (osmFISH) — osmFISH_bulk_pheno","text":"Simulated phenotype assignment spatial region groups osmFISH synthetic data.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_cellType.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Cell Type Labels for osmFISH Dataset — osmFISH_metadata_cellType","title":"Simulated Cell Type Labels for osmFISH Dataset — osmFISH_metadata_cellType","text":"named character vector containing simulated single-cell level cell type annotations used SpaPheno osmFISH example. element name corresponds unique cell ID.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_cellType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Cell Type Labels for osmFISH Dataset — osmFISH_metadata_cellType","text":"","code":"osmFISH_metadata_cellType"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_cellType.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Cell Type Labels for osmFISH Dataset — osmFISH_metadata_cellType","text":"named character vector length equal number cells (e.g., 6000+). Names cell IDs, values cell type names (e.g., \"Neuron\", \"Astrocyte\", etc.).","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_cellType.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Cell Type Labels for osmFISH Dataset — osmFISH_metadata_cellType","text":"Simulated using cell type annotation synthetic osmFISH data.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Region Labels for osmFISH Dataset — osmFISH_metadata_region","title":"Simulated Region Labels for osmFISH Dataset — osmFISH_metadata_region","text":"named character vector containing spatial region annotations cells simulated osmFISH dataset. element corresponds region label assigned cell.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Region Labels for osmFISH Dataset — osmFISH_metadata_region","text":"","code":"osmFISH_metadata_region"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Region Labels for osmFISH Dataset — osmFISH_metadata_region","text":"named character vector length matching number cells. Names cell IDs, values represent spatial region names (e.g., \"Region1\", \"Region2\").","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_metadata_region.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Region Labels for osmFISH Dataset — osmFISH_metadata_region","text":"Simulated spatial region assignment osmFISH synthetic dataset.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_phenotype_simu.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Phenotype Labels for osmFISH Dataset — osmFISH_phenotype_simu","title":"Simulated Phenotype Labels for osmFISH Dataset — osmFISH_phenotype_simu","text":"character vector containing names two spatial regions used simulated binary phenotypes osmFISH synthetic dataset. phenotype labels define two groups (e.g., \"Tumor\" vs \"Normal\") training evaluating spatially-informed predictive models.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_phenotype_simu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Phenotype Labels for osmFISH Dataset — osmFISH_phenotype_simu","text":"","code":"data(osmFISH_phenotype_simu)"},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_phenotype_simu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Phenotype Labels for osmFISH Dataset — osmFISH_phenotype_simu","text":"character vector length 2. element name region selected `osmFISH_metadata_region` object. two regions used simulate binary phenotypic classes.","code":""},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_phenotype_simu.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Phenotype Labels for osmFISH Dataset — osmFISH_phenotype_simu","text":"Extracted simulated osmFISH region labels SpaPheno tutorial.","code":""},{"path":[]},{"path":"https://github.com/DuanLab1/SpaPheno/reference/osmFISH_phenotype_simu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Phenotype Labels for osmFISH Dataset — osmFISH_phenotype_simu","text":"","code":"data(osmFISH_phenotype_simu) print(osmFISH_phenotype_simu) #> [1] \"Layer 2-3 lateral\" \"Layer 2-3 medial\""},{"path":"https://github.com/DuanLab1/SpaPheno/news/index.html","id":"spapheno-v001","dir":"Changelog","previous_headings":"","what":"SpaPheno v0.0.1","title":"SpaPheno v0.0.1","text":"Initial repository (2025-07-29)","code":""}]
