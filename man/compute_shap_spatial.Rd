% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_shap_spatial.R
\name{compute_shap_spatial}
\alias{compute_shap_spatial}
\title{Compute SHAP Values for Spatial Transcriptomics Data}
\usage{
compute_shap_spatial(model, X_bulk, y_bulk, X_spatial)
}
\arguments{
\item{model}{A fitted glmnet model object (e.g., from \code{cv.glmnet}) with named elements \code{$model} and \code{$lambda}.}

\item{X_bulk}{A numeric matrix or data.frame of bulk RNA-seq gene expression (samples × features).}

\item{y_bulk}{A numeric vector of phenotype labels corresponding to \code{X_bulk}.}

\item{X_spatial}{A numeric matrix or data.frame of spatial transcriptomics expression (samples × features).}
}
\value{
A data.frame of SHAP values for each sample-feature pair with columns:
\itemize{
  \item \code{feature}: Feature (gene) name.
  \item \code{phi}: The SHAP value of that feature.
  \item \code{sample}: The spatial sample identifier.
  \item \code{feature.value}: Original feature expression value.
}
}
\description{
This function computes SHAP (SHapley Additive exPlanations) values for spatial
transcriptomics data using a predictive model trained on bulk RNA-seq data.
It returns a long-format data frame with one row per sample-feature pair.
}
\details{
\itemize{
  \item Normalizes \code{X_bulk} by row-wise sum to ensure comparability across samples.
  \item Replaces \code{NA} and \code{NaN} in \code{X_spatial} with 0 to ensure model stability.
  \item Ensures feature alignment and column order consistency between bulk and spatial datasets.
  \item Computes SHAP values using the \code{iml::Shapley} class for each spatial unit.
}
}
\examples{
\dontrun{

data("osmFISH_metadata_cellType")
data("osmFISH_bulk_decon")
data("osmFISH_bulk_pheno")
data("osmFISH_bulk_coordinate")

PhenoResult <- SpatialPhenoMap(
  bulk_decon = osmFISH_bulk_decon,
  bulk_pheno = osmFISH_bulk_pheno,
  family = "binomial",
  coord = osmFISH_bulk_coordinate,
  resolution = "single_cell",
  sample_information_cellType = osmFISH_metadata_cellType
)

pred_result <- PhenoResult$pred_score
phenoPlus <- row.names(pred_result[pred_result$label \%in\% "phenotype+", ])
model <- PhenoResult$model
X <- as.data.frame(PhenoResult$cell_type_distribution[phenoPlus, ])

# This step took a very long time
shap_test_plus <- compute_shap_spatial(
  model = model,
  X_bulk = as.data.frame(osmFISH_bulk_decon),
  y_bulk = osmFISH_bulk_pheno,
  X_spatial = X)
}

}
\author{
Bin Duan
}
